	package View;

import Model.Question;
import java.awt.Cursor;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

@SuppressWarnings("serial")
public class AdminFrame extends javax.swing.JFrame {
    
  /** Variables declaration **/                    
  private javax.swing.JLabel addBTN;
  private javax.swing.JLabel back;
  private javax.swing.JLabel deleteBTN;
  private javax.swing.JLabel editBTN;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel logoTitle;
  private javax.swing.JComboBox<String> questionsCombo;
  private javax.swing.JLabel showMoreBTN;

  public AdminFrame() {
		
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
                
        initComponents();
        this.setResizable(false);
        back.setCursor(new Cursor(Cursor.HAND_CURSOR));
        addBTN.setCursor(new Cursor(Cursor.HAND_CURSOR));    
        deleteBTN.setCursor(new Cursor(Cursor.HAND_CURSOR));    
        editBTN.setCursor(new Cursor(Cursor.HAND_CURSOR));
      
        showMoreBTN.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        logoTitle.requestFocusInWindow();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      
        questionsCombo.setMaximumRowCount(5);
    }
	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	logoTitle = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        addBTN = new javax.swing.JLabel();
        deleteBTN = new javax.swing.JLabel();
        editBTN = new javax.swing.JLabel();
        questionsCombo = new javax.swing.JComboBox<String>(new javax.swing.DefaultComboBoxModel(ViewLogic.getInstance().getAllQuestions().toArray()));
        showMoreBTN = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Snake Game");
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(null);

        logoTitle.setBackground(new java.awt.Color(255, 255, 255));
        logoTitle.setFont(new java.awt.Font("Gabriola", 2, 115)); // NOI18N
        logoTitle.setText("Snake Game");
        getContentPane().add(logoTitle);
        logoTitle.setBounds(270, 35, 660, 140);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        back.setToolTipText("Go Home");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(25, 25, 70, 50);

        addBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addNew_Regular.png"))); // NOI18N
        addBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBTNMouseExited(evt);
            }
        });
        getContentPane().add(addBTN);
        addBTN.setBounds(320, 290, 320, 70);

        deleteBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deleteSelected_regular.png"))); // NOI18N
        deleteBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteBTNMouseExited(evt);
            }
        });
        getContentPane().add(deleteBTN);
        deleteBTN.setBounds(550, 390, 270, 70);

        editBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editSelected_regular.png"))); // NOI18N
        editBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editBTNMouseExited(evt);
            }
        });
        getContentPane().add(editBTN);
        editBTN.setBounds(160, 390, 240, 80);

        questionsCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsComboActionPerformed(evt);
            }
        });
        getContentPane().add(questionsCombo);
        questionsCombo.setBounds(370, 190, 500, 50);// 370 190 130 50

        showMoreBTN.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        showMoreBTN.setForeground(new java.awt.Color(179, 89, 0));
        showMoreBTN.setText("Show More Details");
        showMoreBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 51, 0), new java.awt.Color(102, 0, 51), new java.awt.Color(153, 51, 0), new java.awt.Color(153, 0, 0)));
        showMoreBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showMoreBTNMouseClicked(evt);
            }
        });
        getContentPane().add(showMoreBTN);
        showMoreBTN.setBounds(600, 240, 260, 53);//520 190 260 53

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Question ID");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(220, 200, 140, 40);

        jLabel1.setIcon(new ImageIcon(AdminFrame.class.getResource("/images/backGro.jpeg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1000, 592);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void backMouseClicked(java.awt.event.MouseEvent evt) {                                  
        MainFrame mf = new MainFrame(Controller.Main.file);
        this.setVisible(false);
        mf.setVisible(true);   
    }                                 
//MouseEntered/MouseExited is for effect on how the button looks when we move the mouse into it/out
    private void addBTNMouseEntered(java.awt.event.MouseEvent evt) {                                    
         ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/addNew_onHover.png"));
         addBTN.setIcon(icon);
    }                                   

    private void addBTNMouseExited(java.awt.event.MouseEvent evt) {                                   
    	ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/addNew_Regular.png"));
        addBTN.setIcon(icon);
    }                                  

    private void deleteBTNMouseEntered(java.awt.event.MouseEvent evt) {                                       
    	ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/deleteSelected_onHover.png"));
    	deleteBTN.setIcon(icon); 
    }                                      

    private void deleteBTNMouseExited(java.awt.event.MouseEvent evt) {                                     
         ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/deleteSelected_regular.png"));
         deleteBTN.setIcon(icon);
    }                                     

    private void editBTNMouseEntered(java.awt.event.MouseEvent evt) {                                     
    	ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/editSelected_onHover.png"));
    	editBTN.setIcon(icon); 
    }                                    

    private void editBTNMouseExited(java.awt.event.MouseEvent evt) {                                    
    	ImageIcon icon = new ImageIcon(this.getClass().getResource("/images/editSelected_regular.png"));
    	editBTN.setIcon(icon);   
    }                
    
    //Finish with Hover effect on button
    
    

    private void questionsComboActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              
/**
 * after the user choose from combobox and press show more details 
 * @param evt
 */
    private void showMoreBTNMouseClicked(java.awt.event.MouseEvent evt) {                                         
    	if(questionsCombo.getSelectedItem() != null){//user must choose value from combobx
    		//
    		String selectedComboID = questionsCombo.getSelectedItem().toString();
    		Question q = ViewLogic.getInstance().getSpecificQuestion(selectedComboID);
            ViewLogic.getInstance().decorateQuestion(q,this);    
        }  
    }                                        

    private void deleteBTNMouseClicked(java.awt.event.MouseEvent evt) {                                       
    	int selectedOption4;
        selectedOption4 = JOptionPane.showConfirmDialog(null, "Are you sure?","Confirmation",JOptionPane.YES_NO_OPTION);
        
        if (selectedOption4 == JOptionPane.YES_OPTION) {
        	String selectedComboID = questionsCombo.getSelectedItem().toString();
        	Question q =  ViewLogic.getInstance().getSpecificQuestion(selectedComboID);
            if(ViewLogic.getInstance().removeQuestion(q)){
            	JOptionPane.showMessageDialog(null, "Question Successfully Deleted");
            	questionsCombo.setModel(new javax.swing.DefaultComboBoxModel(ViewLogic.getInstance().getAllQuestions().toArray()));
            	this.setVisible(false);
            	AdminFrame afee = new AdminFrame();
            	afee.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to delete question");
            }
        }
    }                                      

    private void addBTNMouseClicked(java.awt.event.MouseEvent evt) {
    	AddnewQuestionFrame ads = new AddnewQuestionFrame();
    	this.setVisible(false);
    	ads.setVisible(true);
    }                                   

    private void editBTNMouseClicked(java.awt.event.MouseEvent evt) {
    	String selectedComboID = questionsCombo.getSelectedItem().toString();
    	Question q = ViewLogic.getInstance().getSpecificQuestion(selectedComboID);
    	AddnewQuestionFrame ads = new AddnewQuestionFrame();
    	ads.setDest("editquestion");
    	ads.setLocalQuestion(q);
    	ads.initFrame();
    	this.setVisible(false);
    	ads.setVisible(true);
    }                                                  
}
